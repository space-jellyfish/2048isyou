#!/usr/bin/env python
import os
import sys

env = SConscript("godot-cpp/SConstruct")

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# Set compiler flags based on build type
if env['target'] == 'template_debug':
    env.Append(CXXFLAGS=['-g', '-O0'])
else:
    env.Append(CXXFLAGS=['-O3'])

if env['CC'] == 'clang':
    env.Append(CXXFLAGS=['-stdlib=libc++', '-std=c++17'])
    env.Append(LINKFLAGS=['-stdlib=libc++'])
elif env['CC'] == 'gcc':
    env.Append(CXXFLAGS=['-stdlib=libstdc++', '/std:c++17'])
    env.Append(LINKFLAGS=['-stdlib=libstdc++'])

# tweak this if you want to use different folders, or more folders, to store your source code in.
# SCons does not natively support wildcards like ** for recursive directory inclusion
env.Append(CPPPATH="hostile/")
env.Append(CPPPATH="lib/actions/")
env.Append(CPPPATH="lib/open_list_hog/")
env.Append(CPPPATH="lib/open_list_warthog/")
src = Glob("hostile/*.cpp")
src += Glob("lib/actions/*.cpp")
src += Glob("lib/open_list_hog/*.cpp")
src += Glob("lib/open_list_warthog/*.cpp")

if env['platform'] == 'macos':
	libpath = 'hostile{}{}'.format( env['suffix'], env['SHLIBSUFFIX'] );
	sharedlib = env.SharedLibrary(libpath, src);
	Default(sharedlib);
elif env['platform'] == 'windows':
	libpath = 'libhostile{}{}'.format( env['suffix'], env['SHLIBSUFFIX'] );
	sharedlib = env.SharedLibrary(libpath, src);
	Default(sharedlib);